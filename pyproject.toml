[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mocanet"
version = "0.1.0"
description = "Memory-Orchestrated Context Allocation Network - A novel neural architecture with external memory and sparse mixture-of-experts"
authors = [{name = "MOCA-Net Team"}]
readme = "README.md"
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "torch>=2.0.0",
    "numpy>=1.24.0",
    "pydantic>=2.0.0",
    "rich>=13.0.0",
    "hydra-core>=1.3.0",
    "matplotlib>=3.7.0",
    "scikit-learn>=1.3.0",
    "tqdm>=4.65.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "mypy>=1.0.0",
]

[project.scripts]
mocanet-train = "mocanet.train:main"
mocanet-eval = "mocanet.eval:main"
mocanet-ablate = "mocanet.ablation:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py312']

[tool.ruff]
line-length = 88
target-version = "py312"
select = ["E", "F", "I", "N", "W", "B", "C4", "UP", "ARG", "SIM", "TCH", "Q", "RUF"]
ignore = ["E501", "B008", "C901"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=src/mocanet --cov-report=term-missing --cov-report=html"
